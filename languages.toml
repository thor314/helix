# My language configurations
# https://docs.helix-editor.com/languages.html

[[language]] 
name = "markdown"
file-types = ["md"]
text-width = 100

# support helix-gpt completions
[language-server.gpt]
command = "helix-gpt"

[language-server.ts]
command = "typescript-language-server"
args = ["--stdio"]
language-id = "javascript"

[[language]]
name = "typescript"
language-servers = [ "ts", "gpt" ]

[[language]]
# Manual: https://github.com/rust-lang/rust-analyzer/blob/master/docs/user/manual.adoc
# listed options: https://github.com/rust-lang/rust-analyzer/blob/master/docs/user/generated_config.adoc
name = "rust"
# scope = "source.rust"
# injection-regex = "(rust|rs)"
# file-types = ["rs"]
# roots = ["Cargo.toml", "Cargo.lock"]
# comment-token = "//"
# language-server = { command = "rust-analyzer" } 
language-servers = [ "rust-analyzer", "gpt" ] 
# indent = { tab-width = 4, unit = "    " }
# "diagnostic.error" = { underline = { style = "curl", color = "red" } }

# TODO: update "config" to some other field, probably changed on patch 24.7
#[language.config] 
## https://github.com/rust-lang/rust-analyzer/blob/master/docs/user/generated_config.adoc
#checkOnSave.command = "clippy" # d: "check"
## Whether to enforce the import granularity setting for all files. If set to false rust-analyzer will try to keep import styles consistent per file.
#imports.granularity.enforce = true # d: false
## Check all targets and tests (--all-targets). disable to speed checks.
#checkOnSave.allTargets = true # d: true
## List of features to activate (eg test, wasm). disable to speed checks.
#checkOnSave.features = "all" # d: null
## Whether to show experimental rust-analyzer diagnostics that might have more false positives than usual.
#diagnostics.experimental.enable = true # d: false
## Whether to show inlay type hints for variables. Note this is not currently supported in Helix.
#inlayHints.typeHints.enable = true # d: true
## typing.autoClosingAngleBrackets.enable = false
## 

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'
'|' = '|'
