## Welcome to my (Thor, thor314, cryptograthor)'s helix configuration!

# gallery: https://github.com/helix-editor/helix/wiki/Themes
# theme = "monokai_pro_octagon"
# theme = "monokai_pro_octagon"
# theme = "base16_transparent" # todo: better color choices, use rose_pine_moon as ref
theme = "rose_transparent" # todo: better color choices, use rose_pine_moon as ref

[editor]
# docs:  https://docs.helix-editor.com/editor.html
line-number = "relative" # absolute, relative
rulers = [100]           # where to display vertical rulers
bufferline = "multiple"  # always, multiple, never; display open buffers at top
color-modes = true       # display the bottom left status bar helix-mode in color
text-width = 100         # used for :reflow
popup-border = "all"     # whether to draw a border. popup menu all all

[editor.statusline]
left = [
  "mode",
  "spacer",
  "diagnostics",
  "spacer",
  "workspace-diagnostics",
  "spacer",
  "version-control",
  "spacer",
  "spinner",
]
center = [
  "file-name",
  "spacer",
  "file-modification-indicator",
  "spacer",
  "read-only-indicator",
]
right = [
  "register",
  "spacer",
  "primary-selection-length",
  "spacer",
  "selections",
  "spacer",
  "position",
  "total-line-numbers",
  "spacer",
  "position-percentage",
]
# "total-line-numbers", "spacer", 
[editor.lsp]
display-messages = true    # display lsp progress messages below statusline, slightly noisy info
display-inlay-hints = true # display LSP inlay hints

[editor.cursor-shape] # by default, all are block
insert = "bar"
select = "underline"

# [editor.file-picker]
# hidden = false # uncomment - don't ignore hidden files

[editor.auto-pairs] # enable automatic pair insertion. for lang-spec, use languages.toml.
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'

[editor.auto-save]
focus-lost = true         # save on losing window focus
after-delay.enable = true # save after 3 seconds since last edit

[editor.indent-guides]
render = true   # show '|' character indent guides
character = "â”Š"

[editor.soft-wrap]
enable = true             # wrap lines, don't extend infinitely to the right
wrap-at-text-width = true # wrap at text-width size

############
# KEYBINDS #
############
[keys.normal]
C-t = [
  "delete_selection",
  "move_char_left",
  "paste_before",
  "move_char_right",
] # transpose
C-c = [
  "collapse_selection",
  "keep_primary_selection",
  "normal_mode",
] # hacky autosave and unselect
A-c = "toggle_comments"

A-d = [
  "extend_to_line_bounds",
  "yank",
  "paste_after",
  "move_line_down",
] # duplicate line
D = ["select_mode", "goto_line_end", "delete_selection"] # Kill rest of line

C-A-s = ":write-all" # write all buffers

"A-=" = "decrement"
"A-+" = "increment"

# view and buffer
"A-/" = ":vsplit"
"A-?" = ":hsplit"
'A-1' = "rotate_view"
'A-h' = ":toggle lsp.display-inlay-hints"
'{' = ":buffer-previous"
'}' = ":buffer-next"

# movement adjustments - save selection to avoid losing place, helix has no undo last movement
tab = ["save_selection", "move_parent_node_end"]
S-tab = ["save_selection", "move_parent_node_start"]
"%" = ["save_selection", "select_all"]
f = ["save_selection", "find_next_char"]
F = ["save_selection", "find_prev_char"]
G = ["save_selection", "goto_last_line"]
L = ["save_selection", "goto_line_end"]
A = ["save_selection", "insert_at_line_end"]
I = ["save_selection", "insert_at_line_start"]
H = ["save_selection", "goto_first_nonwhitespace"]
t = ["save_selection", "find_till_char"]
T = ["save_selection", "till_prev_char"]

[keys.select] # by pressing v in normal mode
C-c = ["collapse_selection", "normal_mode"]

# movement adjustments
tab = ["save_selection", "extend_parent_node_end"]
S-tab = ["save_selection", "extend_parent_node_start"]
f = ["save_selection", "find_next_char"]
F = ["save_selection", "find_prev_char"]
G = ["save_selection", "goto_last_line"]
L = ["save_selection", "goto_line_end"]
H = ["save_selection", "goto_first_nonwhitespace"]
t = ["save_selection", "find_till_char"]
T = ["save_selection", "till_prev_char"]

[keys.insert]
C-c = "normal_mode"

S-tab = ["save_selection", "move_parent_node_start"]

[keys.normal.space]
space = ":w"
c = [":w", ":config-reload"] # overwrite toggle block comment
r = ":reload"
q = ":bc"
Q = ":wq"

[keys.normal.space.o] # open commen files
c = ":config-open"                        # overwrite toggle comment
l = ":open ~/.files/helix/languages.toml"
L = ":log-open"

###########
# ARCHIVE #
###########
#[keys.normal."A-b"]
#q = ":buffer-close" # also :bc
#A-q = ":buffer-close!" # also :bc!
## c = ":vsplit-new scratch" # new buffer in split # bug - runtime error
#C = ":new" # scratch buffer
#n = ":buffer-next"
#p = ":buffer-previous"
#k = ":buffer-next"
#j = ":buffer-previous"
#s = ":write-all" # write all buffers
