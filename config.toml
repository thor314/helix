## Welcome to my (Thor, thor314, cryptograthor)'s helix configuration!

# gallery: https://github.com/helix-editor/helix/wiki/Themes
# view all: `:theme <tab thru>`
theme = "monokai_pro_octagon" # grey tint

[editor]
# docs:  https://docs.helix-editor.com/editor.html
line-number = "relative" # absolute, relative
rulers = [100] # where to display vertical rulers
bufferline = "multiple" # always, multiple, never Renders a line at the top of the editor displaying open buffers
color-modes = true # display the bottom left status bar helix-mode in color
text-width = 100 # used for :reflow
popup-border = "all" # whether to draw a border. popup menu all all

[editor.statusline] 
left = ["mode", "spacer", "diagnostics", "spacer", "workspace-diagnostics", "spacer", "version-control", "spacer", "spinner" ]
center = ["total-line-numbers", "spacer", "file-name", "spacer", "file-modification-indicator", "spacer", "read-only-indicator"]
right = ["register", "spacer", "primary-selection-length", "spacer", "position-percentage"]

[editor.lsp]
display-messages = true # display lsp progress messages below statusline, slightly noisy info
display-inlay-hints = true # display LSP inlay hints

[editor.cursor-shape] # by default, all are block
insert = "bar"
select = "underline"

[editor.file-picker]
# hidden = false # uncomment - don't ignore hidden files

[editor.auto-pairs] # enable automatic pair insertion. for lang-spec, use languages.toml.
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'

[editor.auto-save]
focus-lost = true # save on losing window focus
after-delay.enable = true # save after 3 seconds since last edit

[editor.indent-guides]
render = true # show '|' character indent guides
character = "â”Š"

[editor.soft-wrap]
enable = true # wrap lines, don't extend infinitely to the right
wrap-at-text-width = true # wrap at text-width size


############
# KEYBINDS #
############
[keys.normal]
tab = ["save_selection", "move_parent_node_end"]
S-tab = ["save_selection", "move_parent_node_start"]
"%" = ["save_selection", "select_all"] 
C-t = ["delete_selection", "move_char_left", "paste_before", "move_char_right"] # transpose 
f = ["save_selection", "find_next_char"]
F = ["save_selection", "find_prev_char"]
G = ["save_selection", "goto_last_line"] 
C-c = ["collapse_selection", "keep_primary_selection", "normal_mode"] # hacky autosave and unselect
A-c = "toggle_comments"
"A-/" = ":vsplit"
"A-?" = ":hsplit"
A = ["save_selection", "insert_at_line_end"] 
I = ["save_selection", "insert_at_line_start"] 
A-d = ["extend_to_line_bounds", "yank", "paste_after", "move_line_down"] # duplicate line
t = ["save_selection", "find_till_char"]
T = ["save_selection", "till_prev_char"]
C-A-s = ":write-all" # write all buffers, may remap to search all buffers

#[keys.select]
#T = "switch_case"
#G = "goto_last_line"
#C-c = ["collapse_selection", "normal_mode"]
#A-c = "toggle_comments" 
#v = "move_line_down" # bug, won't hold last line in selection

[keys.insert]
C-c = "normal_mode"
S-tab = ["save_selection", "move_parent_node_start"]

[keys.select]
tab = ["save_selection", "extend_parent_node_end"]
S-tab = ["save_selection", "extend_parent_node_start"]

## j = { j = "normal_mode" } # more annoying in helix than vim
## k = { k = "normal_mode" }

#[keys.normal.g] # goto should save jumplist position 
#"."=["save_selection","goto_last_modification"]
#y = ["save_selection","goto_type_definition"]
#f = ["save_selection","goto_file"] # goto-file in selection, meh?
#g = ["save_selection","goto_file_start"]
#c = ["save_selection","goto_window_center"]
#r = ["save_selection","goto_reference"]
#l = ["save_selection","goto_line_end"]
## L = ["save_selection","goto_line_end"]
#L = ["save_selection","select_mode", "goto_line_end", "delete_selection" ] 
#a = ["save_selection","goto_last_accessed_file"]
#e = ["save_selection","goto_last_line"]
#o = "jump_backward"
#i = "jump_forward"
#I = ["save_selection","goto_implementation"]
#d = ["save_selection","goto_definition"]
#h = ["save_selection","goto_line_start"]
#H = ["save_selection","select_mode", "goto_line_start", "delete_selection" ] 
#t = ["save_selection","goto_window_top"]
#n = ["save_selection","goto_previous_buffer"]
#s = ["save_selection","goto_first_nonwhitespace"]
#b = ["save_selection","goto_window_bottom"]
#m = ["save_selection","goto_last_modified_file"]

##[keys.normal."C-t"] # toggles (maybe)

#[keys.normal."A-b"]
#q = ":buffer-close" # also :bc
#A-q = ":buffer-close!" # also :bc!
## c = ":vsplit-new scratch" # new buffer in split # bug - runtime error
#C = ":new" # scratch buffer
#n = ":buffer-next"
#p = ":buffer-previous"
#k = ":buffer-next"
#j = ":buffer-previous"
#s = ":write-all" # write all buffers

#[keys.normal."C-m"]
#f = ":fmt"

#[keys.normal.space] # misc operators, temp
#space = ":w"
#p = "paste_clipboard_before" 
#P = "paste_clipboard_after"
## q = [":w", ":q"] # avoid ":wq" bug? No, this crashes too. yikes.
#q = [":q"] # avoid ":wq" bug? No, this crashes too. yikes.
## o = ":cd" # have to provide a dir 

#[keys.normal.'[']
#space = [ ":insert-output echo -n ' '" ]

#[keys.normal.']']
#space = ["move_char_right", ":insert-output echo -n ' '", "move_char_left"]

#[keys.normal.space.c]
#a = ":open ~/.files/fish/conf.d/alias.fish"
#A = ":open ~/.files/alacritty/alacritty.yml"
#b = ":open ~/.files/fish/conf.d/bind.fish"
#c = ":open ~/.files/helix/config.toml"
#d = ":open ~/.files/install.conf.yaml"
#f = ":open ~/.files/fish/config.fish"
#l = ":open ~/.config/helix/languages.toml" 
#K = ":open ~/.setup/clones/helix/book/src/keymap.md"
#C = ":open ~/.setup/clones/helix/book/src/generated/typable-cmd.md"
#s = ":open ~/.setup/install.sh"
#u = ":open ~/.setup/unsorted.sh"
#v = ":open ~/.files/vimrc"
#V = ":open ~/note2/.obsidian.vimrc"
#z = ":open ~/.zshrc" 
#space = ":config-reload"

#############
### SELECT ##
#############
## Alt-o - expand selection to parent syntax note *useful*
## alt-n selects next sibling in syntax tree
## s/S - MAJOR DIFF - regex select in selection/split in selection
## Alt-s split on newlines
## & - align cursors
## _ - trim whitespace from selection
## ; - collapse selection 
## C - extend cursor down
## A-C - cursor up
## (,) - rotate primary cursor
## A-(/) - rotate selections (seems like this would b hard to use)
## % or C-a - select all
## K - keep selections matching regex (narrow selections)
## A-K - remove selections matching regex
## A-(hljk) - TS select next prev

###########
# ARCHIVE #
###########
