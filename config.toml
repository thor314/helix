## Welcome to my (Thor, thor314, cryptograthor)'s helix configuration!

# gallery: https://github.com/helix-editor/helix/wiki/Themes
# theme = "monokai_pro_octagon"
# theme = "monokai_pro_octagon"
# theme = "base16_transparent" # todo: better color choices, use rose_pine_moon as ref
theme = "rose_transparent" # todo: better color choices, use rose_pine_moon as ref

[editor]
# docs:  https://docs.helix-editor.com/editor.html
line-number  = "relative" # absolute, relative
rulers       = [100]      # where to display vertical rulers
bufferline   = "multiple" # always, multiple, never; display open buffers at top
color-modes  = true       # display the bottom left status bar helix-mode in color
text-width   = 100        # used for :reflow
popup-border = "all"      # whether to draw a border. popup menu all all

[editor.statusline]
left   = ["mode", "spacer", "diagnostics", "spacer", "workspace-diagnostics", "spacer", "version-control", "spacer", "spinner"]
center = ["file-name", "spacer", "file-modification-indicator", "spacer", "read-only-indicator"]
right  = ["register", "spacer", "primary-selection-length", "spacer", "selections", "spacer", "position", "total-line-numbers", "spacer", "position-percentage"]
# "total-line-numbers", "spacer", 
[editor.lsp]
display-messages    = true # display lsp progress messages below statusline, slightly noisy info
display-inlay-hints = true # display LSP inlay hints

[editor.cursor-shape] # by default, all are block
insert = "bar"
select = "underline"

# [editor.file-picker]
# hidden = false # uncomment - don't ignore hidden files

[editor.auto-pairs] # enable automatic pair insertion. for lang-spec, use languages.toml.
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'

[editor.auto-save]
focus-lost         = true # save on losing window focus
after-delay.enable = true # save after 3 seconds since last edit

[editor.indent-guides]
render    = true # show '|' character indent guides
character = "â”Š"

[editor.soft-wrap]
enable             = true # wrap lines, don't extend infinitely to the right
wrap-at-text-width = true # wrap at text-width size

############
# KEYBINDS #
############
[keys.normal]
C-t = ["delete_selection", "move_char_left", "paste_before", "move_char_right"] # transpose
C-c = [ "collapse_selection", "keep_primary_selection" ] # collapse cursors and selection
"A-/" = "toggle_comments"
";" = ["save_selection", "repeat_last_motion"] # similar to vim mode but no ',' ctrl-o to go back
"," = "collapse_selection" # C-c to collapse cursor and selection, ',' for just selection

## Collapse selection cheats: save a key press
"A-;" = ["flip_selections", "collapse_selection"] 
r = ["collapse_selection", "replace"] # common: find a char; just change a char

A-d = ["extend_to_line_bounds", "yank", "paste_after", "move_line_down"] # duplicate line
D   = ["select_mode", "goto_line_end", "delete_selection"]               # Kill rest of line

C-A-s = ":write-all" # write all buffers, todo: deprecate probably

"A-=" = "decrement"
"A-+" = "increment"

# view and buffer
'A-1' = "rotate_view"
'A-h' = ":toggle lsp.display-inlay-hints"
'{'   = ":buffer-previous"
'}'   = ":buffer-next"

# movement adjustments - save selection to avoid losing place, helix undo movement = Ctrl-O
tab   = ["save_selection", "move_parent_node_end"]
S-tab = ["save_selection", "move_parent_node_start"]
"%"   = ["save_selection", "select_all"]
f     = ["save_selection", "find_next_char"]
F     = ["save_selection", "find_prev_char"]
t     = ["save_selection", "find_till_char"]
T     = ["save_selection", "till_prev_char"]
G     = ["save_selection", "goto_last_line"]
A     = "insert_at_line_end"
I     = "insert_at_line_start"
L     = "goto_line_end"
H     = "goto_first_nonwhitespace"

[keys.select] # by pressing v in normal mode
C-c = ["collapse_selection", "normal_mode"]
"A-/" = "toggle_comments"
"," = "collapse_selection" # C-c to collapse cursor and selection, ',' for just selection
# "," = "jump_backward" # poor-mans invert ';'

# movement adjustments
tab   = ["save_selection", "extend_parent_node_end"]
S-tab = ["save_selection", "extend_parent_node_start"]
f     = ["save_selection", "find_next_char"]
F     = ["save_selection", "find_prev_char"]
t     = ["save_selection", "find_till_char"]
T     = ["save_selection", "till_prev_char"]
G     = ["save_selection", "goto_last_line"]
L     = "goto_line_end"
H     = "goto_first_nonwhitespace"

[keys.insert]
C-c = "normal_mode"
S-tab = ["save_selection", "move_parent_node_start"]
"A-/"= "toggle_comments"

# convenience: nice to be able to paste and undo in insert mode
C-z = "undo"
A-z = "redo"
C-v = "paste_clipboard_before"

[keys.normal.space]
space = ":w"
c     = [":w", ":config-reload", ":reload-all"] # overwrite toggle block comment
q     = ":bc"
Q     = ":wq"

[keys.normal.space.o] # open commen files
h = ":config-open" # overwrite toggle comment
H = ":open ~/.config/helix/languages.toml"
f = ":open ~/.files/fish/abbr.fish"
F = ":open ~/.files/fish/config.fish"
"." = ":open ~/.files/install.conf.yaml"
u = ":open ~/.setup/unsorted.sh"
C = ":open ~/.cron/crontab"

# some notes
# rm open file: `:sh rm <C-r>%<ret>` - use the handy <C-r> to pick from registers
# create file: `:sh touch <filename>` or `:n filename`

